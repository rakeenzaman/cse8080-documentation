var searchData=
[
  ['n1_5f_0',['n1_',['../class_predicate1_test.html#a528d9f7f618b17802962a3824eea11e3',1,'Predicate1Test::n1_'],['../class_predicate2_test.html#ac002d8e279b24e75906fd19973fc2170',1,'Predicate2Test::n1_'],['../class_predicate3_test.html#ac232320a93f0c1e09886148a3e1929a5',1,'Predicate3Test::n1_'],['../class_predicate4_test.html#a8eb30cd283e613f7a2e501a3969be9ae',1,'Predicate4Test::n1_'],['../class_predicate5_test.html#a356c8e361185b234a417ed895eb14e38',1,'Predicate5Test::n1_']]],
  ['n2_5f_1',['n2_',['../class_predicate2_test.html#a9dbe5173570b9b911af2df889c287027',1,'Predicate2Test::n2_'],['../class_predicate3_test.html#a11049ef16bcaadc8262faf7349c7676e',1,'Predicate3Test::n2_'],['../class_predicate4_test.html#a088fce743c747e3851c926cb3a87fda3',1,'Predicate4Test::n2_'],['../class_predicate5_test.html#a5bf48ba65b7baf20abe1d2af90779ce0',1,'Predicate5Test::n2_']]],
  ['n3_5f_2',['n3_',['../class_predicate3_test.html#afc1df6b079ffe22b87479b161d2ad2f7',1,'Predicate3Test::n3_'],['../class_predicate4_test.html#a00ae6ae54c7d6639d448c036aedb6114',1,'Predicate4Test::n3_'],['../class_predicate5_test.html#a63723efb915dbf418c31b97b64dabc0e',1,'Predicate5Test::n3_']]],
  ['n4_5f_3',['n4_',['../class_predicate4_test.html#ae42e23ce11e3f1c6b813496d6180cc67',1,'Predicate4Test::n4_'],['../class_predicate5_test.html#a5d66aa58badddc8d3d8070a93c0558d6',1,'Predicate5Test::n4_']]],
  ['n5_5f_4',['n5_',['../class_predicate5_test.html#a96badba6366235a2771b27ea014bd9ce',1,'Predicate5Test']]],
  ['n_5f_5',['n_',['../class_non_parameterized_base_test.html#a617d4bbfd2aa5f6d41eea3089f7ad039',1,'NonParameterizedBaseTest']]],
  ['naggy_6',['The Nice, the Strict, and the Naggy',['../md_googletest_2docs_2gmock__cook__book.html#NiceStrictNaggy',1,'']]],
  ['naggymock_7',['NaggyMock',['../classtesting_1_1_naggy_mock.html',1,'testing::NaggyMock&lt; MockClass &gt;'],['../classtesting_1_1_naggy_mock.html#acb769f78b93eb60b04db21250f416f70',1,'testing::NaggyMock::NaggyMock()'],['../classtesting_1_1_naggy_mock.html#aab67cd9f71451f89e5fc8938815119ea',1,'testing::NaggyMock::NaggyMock(A &amp;&amp;arg)'],['../classtesting_1_1_naggy_mock.html#a54087f95264aeb62e32adf5400e91fdf',1,'testing::NaggyMock::NaggyMock(TArg1 &amp;&amp;arg1, TArg2 &amp;&amp;arg2, An &amp;&amp;... args)'],['../md_googletest_2docs_2reference_2mocking.html#NaggyMock',1,'NaggyMock']]],
  ['naggymock_3c_20mockfoo_20_3e_8',['NaggyMock&lt; MockFoo &gt;',['../classtesting_1_1_naggy_mock.html',1,'testing']]],
  ['naggymockimpl_9',['NaggyMockImpl',['../classtesting_1_1internal_1_1_naggy_mock_impl.html',1,'testing::internal::NaggyMockImpl&lt; Base &gt;'],['../classtesting_1_1internal_1_1_naggy_mock_impl.html#a576a38d793843aeb0e423877e0ae7586',1,'testing::internal::NaggyMockImpl::NaggyMockImpl()']]],
  ['naggymockimpl_3c_20mockclass_20_3e_10',['NaggyMockImpl&lt; MockClass &gt;',['../classtesting_1_1internal_1_1_naggy_mock_impl.html',1,'testing::internal']]],
  ['naggymockimpl_3c_20mockfoo_20_3e_11',['NaggyMockImpl&lt; MockFoo &gt;',['../classtesting_1_1internal_1_1_naggy_mock_impl.html',1,'testing::internal']]],
  ['name_12',['Getting the Current Test&apos;s Name',['../md_googletest_2docs_2advanced.html#autotoc_md54',1,'']]],
  ['name_13',['name',['../classtesting_1_1_test_info.html#a915fe33ceb307beb93c497891c8ae08c',1,'testing::TestInfo::name()'],['../classtesting_1_1_test_suite.html#a29a561b569c01065b586bc85991a5d4c',1,'testing::TestSuite::name()']]],
  ['name_20clashes_14',['Avoiding Macro Name Clashes',['../md_googletest_2googletest_2_r_e_a_d_m_e.html#autotoc_md400',1,'']]],
  ['name_20testinfo_3a_3aname_15',['name {#TestInfo::name}',['../md_googletest_2docs_2reference_2testing.html#autotoc_md301',1,'']]],
  ['name_20testsuite_3a_3aname_16',['name {#TestSuite::name}',['../md_googletest_2docs_2reference_2testing.html#autotoc_md283',1,'']]],
  ['named_20deathtest_20when_20it_20uses_20assert_5fdeath_17',['Why does GoogleTest require the entire test suite, instead of individual tests, to be named *DeathTest when it uses ASSERT_DEATH?',['../md_googletest_2docs_2faq.html#autotoc_md103',1,'']]],
  ['namegeneratorselector_18',['NameGeneratorSelector',['../structtesting_1_1internal_1_1_name_generator_selector.html',1,'testing::internal']]],
  ['names_19',['Listing Test Names',['../md_googletest_2docs_2advanced.html#autotoc_md61',1,'']]],
  ['names_20and_20test_20names_20not_20contain_20underscore_20',['Why should test suite names and test names not contain underscore?',['../md_googletest_2docs_2faq.html#autotoc_md83',1,'']]],
  ['names_20for_20value_20parameterized_20test_20parameters_21',['Specifying Names for Value-Parameterized Test Parameters',['../md_googletest_2docs_2advanced.html#autotoc_md48',1,'']]],
  ['namespace1_22',['namespace1',['../namespacenamespace1.html',1,'']]],
  ['namespace2_23',['namespace2',['../namespacenamespace2.html',1,'']]],
  ['namespaces_24',['Is it OK if I have two separate &lt;tt&gt;TEST(Foo, Bar)&lt;/tt&gt; test methods defined in different namespaces?',['../md_googletest_2docs_2faq.html#autotoc_md110',1,'']]],
  ['naming_25',['Death Test Naming',['../md_googletest_2docs_2advanced.html#autotoc_md30',1,'']]],
  ['namingtest_26',['NamingTest',['../class_naming_test.html',1,'']]],
  ['nan1_5f_27',['nan1_',['../gmock-matchers-arithmetic__test_8cc.html#a9ed3badd852ca9a04e77a4dedf98d001',1,'gmock-matchers-arithmetic_test.cc']]],
  ['nan2_5f_28',['nan2_',['../gmock-matchers-arithmetic__test_8cc.html#a1aa30dd66c622a6a7aed2db980ac7630',1,'gmock-matchers-arithmetic_test.cc']]],
  ['nativearray_29',['NativeArray',['../classtesting_1_1internal_1_1_native_array.html',1,'testing::internal::NativeArray&lt; Element &gt;'],['../classtesting_1_1internal_1_1_native_array.html#a52b3689c62532703d11e9d82939a7141',1,'testing::internal::NativeArray::NativeArray(const Element *array, size_t count, RelationToSourceReference)'],['../classtesting_1_1internal_1_1_native_array.html#ac184ee5741af5be3402213819c834405',1,'testing::internal::NativeArray::NativeArray(const Element *array, size_t count, RelationToSourceCopy)'],['../classtesting_1_1internal_1_1_native_array.html#abb346ac3040f5da733f594cc2d5958bc',1,'testing::internal::NativeArray::NativeArray(const NativeArray &amp;rhs)']]],
  ['need_20to_20test_20that_20different_20implementations_20of_20an_20interface_20satisfy_20some_20common_20requirements_20should_20i_20use_20typed_20tests_20or_20value_20parameterized_20tests_30',['I need to test that different implementations of an interface satisfy some common requirements. Should I use typed tests or value-parameterized tests?',['../md_googletest_2docs_2faq.html#autotoc_md85',1,'']]],
  ['needs_20to_20do_20complex_20stuff_20it_20s_20a_20lot_20of_20pain_20to_20specify_20the_20actions_20gmock_20sucks_31',['My mock object needs to do complex stuff. It&apos;s a lot of pain to specify the actions. gMock sucks!',['../md_googletest_2docs_2gmock__faq.html#autotoc_md194',1,'']]],
  ['negation_32',['negation',['../structtesting_1_1internal_1_1negation.html',1,'testing::internal']]],
  ['never_20called_33',['How can I assert that a function is NEVER called?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md186',1,'']]],
  ['new_20action_20templates_20quickly_34',['Writing New Action Templates Quickly',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md176',1,'']]],
  ['new_20actions_35',['Writing New Actions',['../md_googletest_2docs_2gmock__cook__book.html#QuickNewActions',1,'']]],
  ['new_20cardinalities_36',['Writing New Cardinalities',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md172',1,'']]],
  ['new_20matchers_20quickly_37',['Writing New Matchers Quickly',['../md_googletest_2docs_2gmock__cook__book.html#NewMatchers',1,'']]],
  ['new_20monomorphic_20actions_38',['Writing New Monomorphic Actions',['../md_googletest_2docs_2gmock__cook__book.html#NewMonoActions',1,'']]],
  ['new_20monomorphic_20matchers_39',['Writing New Monomorphic Matchers',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md169',1,'']]],
  ['new_20parameterized_20matchers_20quickly_40',['Writing New Parameterized Matchers Quickly',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md168',1,'']]],
  ['new_20polymorphic_20actions_41',['Writing New Polymorphic Actions',['../md_googletest_2docs_2gmock__cook__book.html#NewPolyActions',1,'']]],
  ['new_20polymorphic_20matchers_42',['Writing New Polymorphic Matchers',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md170',1,'']]],
  ['new_20test_20fixture_20class_20for_20each_20of_20them_20this_20seems_20pretty_20tedious_43',['I have several test suites which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.',['../md_googletest_2docs_2faq.html#autotoc_md97',1,'']]],
  ['newer_20expectations_20override_20older_20ones_20rule_20makes_20writing_20expectations_20awkward_20why_20does_20gmock_20do_20that_44',['The &quot;newer expectations override older ones&quot; rule makes writing expectations awkward. Why does gMock do that?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md189',1,'']]],
  ['next_45',['next',['../class_queue_node.html#a55ab43663e363a44c7d8ccb511aa87e2',1,'QueueNode::next()'],['../class_queue_node.html#a2a532c8aff8386948c5dd1a12fb57679',1,'QueueNode::next() const']]],
  ['next_20steps_46',['Next steps',['../md_googletest_2docs_2quickstart-bazel.html#autotoc_md234',1,'Next steps'],['../md_googletest_2docs_2quickstart-cmake.html#autotoc_md239',1,'Next steps']]],
  ['nice_20the_20strict_20and_20the_20naggy_47',['The Nice, the Strict, and the Naggy',['../md_googletest_2docs_2gmock__cook__book.html#NiceStrictNaggy',1,'']]],
  ['nicemock_48',['NiceMock',['../classtesting_1_1_nice_mock.html',1,'testing::NiceMock&lt; MockClass &gt;'],['../classtesting_1_1_nice_mock.html#a10bbd6ebe779ac8ab1f9f3ae2dee9310',1,'testing::NiceMock::NiceMock()'],['../classtesting_1_1_nice_mock.html#a63f2d3b2af1c725036df39367c90fe6d',1,'testing::NiceMock::NiceMock(A &amp;&amp;arg)'],['../classtesting_1_1_nice_mock.html#affe2ff52c46e716b579bf723c75cb39d',1,'testing::NiceMock::NiceMock(TArg1 &amp;&amp;arg1, TArg2 &amp;&amp;arg2, An &amp;&amp;... args)'],['../md_googletest_2docs_2reference_2mocking.html#NiceMock',1,'NiceMock']]],
  ['nicemockimpl_49',['NiceMockImpl',['../classtesting_1_1internal_1_1_nice_mock_impl.html',1,'testing::internal::NiceMockImpl&lt; Base &gt;'],['../classtesting_1_1internal_1_1_nice_mock_impl.html#a07bf73b1762559d45304e4a586064eef',1,'testing::internal::NiceMockImpl::NiceMockImpl()']]],
  ['nicemockimpl_3c_20mockclass_20_3e_50',['NiceMockImpl&lt; MockClass &gt;',['../classtesting_1_1internal_1_1_nice_mock_impl.html',1,'testing::internal']]],
  ['no_20match_20for_20operator_20rsquo_20when_20i_20use_20an_20assertion_20what_20gives_51',['The compiler complains about &amp;lsquo;no match for &apos;operator&lt;&lt;&amp;rsquo;` when I use an assertion. What gives?',['../md_googletest_2docs_2faq.html#autotoc_md106',1,'']]],
  ['no_20matching_20function_20for_20call_20to_20footest_3a_3afootest_20tt_20why_52',['I have a fixture class &lt;tt&gt;FooTest&lt;/tt&gt;, but &lt;tt&gt;TEST_F(FooTest, Bar)&lt;/tt&gt; gives me error &lt;tt&gt;&quot;no matching function for call to `FooTest::FooTest()&apos;&quot;&lt;/tt&gt;. Why?',['../md_googletest_2docs_2faq.html#autotoc_md101',1,'']]],
  ['no_20matching_20function_20to_20call_20when_20i_20use_20assert_5fpred_20how_20do_20i_20fix_20it_53',['The compiler complains &quot;no matching function to call&quot; when I use ASSERT_PRED*. How do I fix it?',['../md_googletest_2docs_2faq.html#autotoc_md93',1,'']]],
  ['no_20side_20effects_54',['Matchers must have no side-effects',['../md_googletest_2docs_2gmock__cook__book.html#PureMatchers',1,'']]],
  ['no_5fcatch_5fexceptions_5fflag_55',['NO_CATCH_EXCEPTIONS_FLAG',['../namespacegoogletest-catch-exceptions-test.html#a23277c194ade350c5f876d222390c494',1,'googletest-catch-exceptions-test']]],
  ['no_5fstacktrace_5fsupport_5fflag_56',['NO_STACKTRACE_SUPPORT_FLAG',['../namespacegoogletest-json-output-unittest.html#aef4c226e1136afdea6f22d104b1c9c50',1,'googletest-json-output-unittest.NO_STACKTRACE_SUPPORT_FLAG'],['../namespacegoogletest-output-test.html#a34a7771c6cbbd4ed7bd68feca3c39400',1,'googletest-output-test.NO_STACKTRACE_SUPPORT_FLAG'],['../namespacegtest__xml__output__unittest.html#a6bba67ffa04ffc915567a34873fcd783',1,'gtest_xml_output_unittest.NO_STACKTRACE_SUPPORT_FLAG']]],
  ['nodefaultconstructor_57',['NoDefaultConstructor',['../classtesting_1_1internal_1_1_no_default_constructor.html',1,'testing::internal::NoDefaultConstructor'],['../classtesting_1_1internal_1_1_no_default_constructor.html#a1486304ce5160488b1d230c5b1bf080f',1,'testing::internal::NoDefaultConstructor::NoDefaultConstructor(const char *)'],['../classtesting_1_1internal_1_1_no_default_constructor.html#a2c18cc4d4249f7dc4eec672856853111',1,'testing::internal::NoDefaultConstructor::NoDefaultConstructor(const NoDefaultConstructor &amp;)=default']]],
  ['nomenclature_58',['Beware of the Nomenclature',['../md_googletest_2docs_2primer.html#autotoc_md223',1,'']]],
  ['non_20death_20tests_20what_20do_20i_20do_59',['But I don&apos;t like calling my entire test suite *DeathTest when it contains both death tests and non-death tests. What do I do?',['../md_googletest_2docs_2faq.html#autotoc_md104',1,'']]],
  ['non_20virtual_20methods_60',['Mocking Non-virtual Methods',['../md_googletest_2docs_2gmock__cook__book.html#MockingNonVirtualMethods',1,'']]],
  ['noncontainer_61',['NonContainer',['../class_non_container.html',1,'']]],
  ['nondefaultconstructassignstring_62',['NonDefaultConstructAssignString',['../class_non_default_construct_assign_string.html',1,'NonDefaultConstructAssignString'],['../class_non_default_construct_assign_string.html#a85e34ec502250fb18edd56a86353d20d',1,'NonDefaultConstructAssignString::NonDefaultConstructAssignString(const std::string &amp;s)'],['../class_non_default_construct_assign_string.html#adc68c8743a779d05ecd925818fd109b2',1,'NonDefaultConstructAssignString::NonDefaultConstructAssignString()=delete'],['../class_non_default_construct_assign_string.html#a4451f36916583a96f3b64b0ddeef6792',1,'NonDefaultConstructAssignString::NonDefaultConstructAssignString(const NonDefaultConstructAssignString &amp;)=default']]],
  ['none_63',['None',['../structtesting_1_1internal_1_1_none.html',1,'testing::internal']]],
  ['nonfatal_5ffailure_64',['NONFATAL_FAILURE',['../class_expect_failure_test.html#aad05da10bb15d21a434eba3b37011406aeabdbecc0c4550d4f46cd44ac62fb92b',1,'ExpectFailureTest']]],
  ['nonfatalfailureinfixtureconstructortest_65',['NonFatalFailureInFixtureConstructorTest',['../class_non_fatal_failure_in_fixture_constructor_test.html',1,'NonFatalFailureInFixtureConstructorTest'],['../class_non_fatal_failure_in_fixture_constructor_test.html#a87a70e2b18b981c627c43f2af85a9345',1,'NonFatalFailureInFixtureConstructorTest::NonFatalFailureInFixtureConstructorTest()']]],
  ['nonfatalfailureinsetuptest_66',['NonFatalFailureInSetUpTest',['../class_non_fatal_failure_in_set_up_test.html',1,'']]],
  ['nonfatally_5ffailed_20testpartresult_3a_3anonfatally_5ffailed_67',['nonfatally_failed {#TestPartResult::nonfatally_failed}',['../md_googletest_2docs_2reference_2testing.html#autotoc_md358',1,'']]],
  ['nonparameterizedbasetest_68',['NonParameterizedBaseTest',['../class_non_parameterized_base_test.html',1,'NonParameterizedBaseTest'],['../class_non_parameterized_base_test.html#aeef052bc258fa8bbe44d550a82d28fe6',1,'NonParameterizedBaseTest::NonParameterizedBaseTest()']]],
  ['normal_20class_69',['Mocking a Normal Class',['../md_googletest_2docs_2gmock__cheat__sheet.html#MockClass',1,'']]],
  ['normalize_70',['normalize',['../namespacegtest__json__test__utils.html#ada57e0a99abb228db0fae7702c1d9bd8',1,'gtest_json_test_utils']]],
  ['normalizeerrormarker_71',['NormalizeErrorMarker',['../namespacegmock__output__test.html#aeeb22f52d3bf1ba7dbda8f8847faa103',1,'gmock_output_test']]],
  ['normalizeoutput_72',['NormalizeOutput',['../namespacegoogletest-output-test.html#a001864bd985eb48c72caf3b19d996dc5',1,'googletest-output-test']]],
  ['normalizetocurrentplatform_73',['NormalizeToCurrentPlatform',['../namespacegoogletest-output-test.html#a519666cd49c0249ed386a568bcc784e9',1,'googletest-output-test']]],
  ['normalizexml_74',['NormalizeXml',['../classgtest__xml__test__utils_1_1_g_test_x_m_l_test_case.html#a2b8aed90eb732e3cc3f0cc333e19a2f0',1,'gtest_xml_test_utils::GTestXMLTestCase']]],
  ['not_20called_20why_75',['My SetUp() function is not called. Why?',['../md_googletest_2docs_2faq.html#autotoc_md96',1,'']]],
  ['not_20contain_20underscore_76',['Why should test suite names and test names not contain underscore?',['../md_googletest_2docs_2faq.html#autotoc_md83',1,'']]],
  ['not_20copyable_77',['Matching Arguments that Are Not Copyable',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md137',1,'']]],
  ['not_20ignored_20as_20it_20ought_20to_20be_20what_20does_20this_20mean_78',['My compiler complains &quot;void value not ignored as it ought to be.&quot; What does this mean?',['../md_googletest_2docs_2faq.html#autotoc_md91',1,'']]],
  ['not_20satisfied_20isn_20t_20this_20redundant_79',['I have a failed test where gMock tells me TWICE that a particular expectation is not satisfied. Isn&apos;t this redundant?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md187',1,'']]],
  ['not_20satisfied_20what_20should_20i_20do_80',['I can&apos;t figure out why gMock thinks my expectations are not satisfied. What should I do?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md184',1,'']]],
  ['not_20to_20show_20the_20warning_20in_20this_20case_81',['gMock prints a warning when a function without EXPECT_CALL is called, even if I have set its behavior using ON_CALL. Would it be reasonable not to show the warning in this case?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md190',1,'']]],
  ['not_20tt_20expect_5fne_20null_20ptr_20tt_20and_20tt_20assert_5fne_20null_20ptr_20tt_82',['Why does GoogleTest support &lt;tt&gt;EXPECT_EQ(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_EQ(NULL, ptr)&lt;/tt&gt; but not &lt;tt&gt;EXPECT_NE(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_NE(NULL, ptr)&lt;/tt&gt;?',['../md_googletest_2docs_2faq.html#autotoc_md84',1,'']]],
  ['notconstdebugstringmethod_83',['NotConstDebugStringMethod',['../struct_not_const_debug_string_method.html',1,'']]],
  ['notdefaultconstructible_84',['NotDefaultConstructible',['../classtesting_1_1gmock__nice__strict__test_1_1_not_default_constructible.html',1,'testing::gmock_nice_strict_test::NotDefaultConstructible'],['../classtesting_1_1gmock__nice__strict__test_1_1_not_default_constructible.html#acfaca2e03925805192b698708d6030bc',1,'testing::gmock_nice_strict_test::NotDefaultConstructible::NotDefaultConstructible()']]],
  ['notests_85',['NoTests',['../googletest-output-test___8cc.html#a7d0214993b29b66c5052c62d5f4824ec',1,'googletest-output-test_.cc']]],
  ['notinstantiatedtest_86',['NotInstantiatedTest',['../classworks__here_1_1_not_instantiated_test.html',1,'works_here']]],
  ['notinstantiatedtypetest_87',['NotInstantiatedTypeTest',['../classworks__here_1_1_not_instantiated_type_test.html',1,'works_here']]],
  ['notreallyahashtable_88',['NotReallyAHashTable',['../struct_not_really_a_hash_table.html',1,'']]],
  ['notusedtest_89',['NotUsedTest',['../classworks__here_1_1_not_used_test.html',1,'works_here']]],
  ['notusedtypetest_90',['NotUsedTypeTest',['../classworks__here_1_1_not_used_type_test.html',1,'works_here']]],
  ['null_20ptr_20tt_20and_20tt_20assert_5feq_20null_20ptr_20tt_20but_20not_20tt_20expect_5fne_20null_20ptr_20tt_20and_20tt_20assert_5fne_20null_20ptr_20tt_91',['Why does GoogleTest support &lt;tt&gt;EXPECT_EQ(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_EQ(NULL, ptr)&lt;/tt&gt; but not &lt;tt&gt;EXPECT_NE(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_NE(NULL, ptr)&lt;/tt&gt;?',['../md_googletest_2docs_2faq.html#autotoc_md84',1,'']]],
  ['nullary_92',['Nullary',['../classtesting_1_1gmock__function__mocker__test_1_1_foo_interface.html#a9440f75381e8a44977c2caee7914098f',1,'testing::gmock_function_mocker_test::FooInterface::Nullary()'],['../classtesting_1_1gmock__more__actions__test_1_1_foo.html#ad6ba38dbb9b1594ac178630f07c4baa5',1,'testing::gmock_more_actions_test::Foo::Nullary()'],['../namespacetesting_1_1gmock__more__actions__test.html#acdd2dd80f777fdb770b513b63064ac19',1,'testing::gmock_more_actions_test::Nullary()']]],
  ['numerictest_93',['NumericTest',['../classlibrary1_1_1_numeric_test.html',1,'library1::NumericTest&lt; T &gt;'],['../classlibrary2_1_1_numeric_test.html',1,'library2::NumericTest&lt; T &gt;']]],
  ['numerictypes_94',['NumericTypes',['../namespacelibrary1.html#ad01e49e2b4dc57a9e352c07b96cd8b62',1,'library1::NumericTypes'],['../namespacelibrary2.html#a5178b6621dee6ba05a860a6e8c7f076a',1,'library2::NumericTypes']]]
];
